{"ast":null,"code":"const DB = 'http://127.0.0.1:8000/api/';\n\n//új szint elmentése\nexport const saveLevel = async level => {\n  const credentials = {\n    username: localStorage.getItem('username'),\n    levelAt: level\n  };\n  console.log(credentials);\n  try {\n    const response = await fetch(DB + 'setlevel/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      alert('Your level has been updated.');\n    } else {\n      alert(data.message);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n//Szint lekérdezése adatbázisból\nexport const getLevel = async username => {\n  try {\n    const response = await fetch(DB + 'level/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username\n      })\n    });\n    const data = await response.json();\n    if (data.status === 'success' && data.levelAt) {\n      alert('Login successful!');\n      window.location.href = data.levelAt;\n    } else {\n      alert(data.error);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n//Felhasználó bejelentkezése\nexport const loginUser = async (credentials, username) => {\n  try {\n    const response = await fetch(DB + 'login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      localStorage.setItem('username', username);\n      getLevel(username);\n    } else if (data.status === 'error') {\n      // Handle error case\n      alert(data.message);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["DB","saveLevel","level","credentials","username","localStorage","getItem","levelAt","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","message","error","getLevel","window","location","href","loginUser","setItem"],"sources":["/Users/markmathe/Downloads/DjangoRest-React-ThreeJs-Template-master-master-2/app/src/components/utils.js"],"sourcesContent":["const DB = 'http://127.0.0.1:8000/api/'\n\n//új szint elmentése\nexport const saveLevel = async (level) => {\n\n    const credentials = {\n        username: localStorage.getItem('username'),\n        levelAt: level,\n    };\n    console.log(credentials)\n\n    try {\n        const response = await fetch(DB +'setlevel/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(credentials)\n        });\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n            alert('Your level has been updated.');\n\n        } else {\n            alert(data.message);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Szint lekérdezése adatbázisból\nexport const getLevel = async (username) => {\n    try {\n        const response = await fetch(DB +'level/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username: username })\n        });\n\n        const data = await response.json();\n\n        if (data.status === 'success' && data.levelAt ) {\n            alert('Login successful!');\n\n            window.location.href = data.levelAt;\n            \n        } else {\n            alert(data.error);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Felhasználó bejelentkezése\nexport const loginUser = async (credentials, username) => {\n\n    try {\n        const response = await fetch(DB + 'login/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(credentials)\n        });\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n\n            localStorage.setItem('username', username);\n            getLevel(username);\n            \n        } else if (data.status === 'error') {\n            // Handle error case\n            alert(data.message);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n\n    }\n\n\n"],"mappings":"AAAA,MAAMA,EAAE,GAAG,4BAA4B;;AAEvC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EAEtC,MAAMC,WAAW,GAAG;IAChBC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC1CC,OAAO,EAAEL;EACb,CAAC;EACDM,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;EAExB,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACX,EAAE,GAAE,WAAW,EAAE;MAC1CY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,WAAW;IACpC,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAC3BC,KAAK,CAAC,8BAA8B,CAAC;IAEzC,CAAC,MAAM;MACHA,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IACvB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOnB,QAAQ,IAAK;EACxC,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACX,EAAE,GAAE,QAAQ,EAAE;MACvCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ,EAAEA;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,IAAIF,IAAI,CAACV,OAAO,EAAG;MAC5Ca,KAAK,CAAC,mBAAmB,CAAC;MAE1BI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACV,OAAO;IAEvC,CAAC,MAAM;MACHa,KAAK,CAACH,IAAI,CAACK,KAAK,CAAC;IACrB;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOxB,WAAW,EAAEC,QAAQ,KAAK;EAEtD,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACX,EAAE,GAAG,QAAQ,EAAE;MACxCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,WAAW;IACpC,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAE3Bd,YAAY,CAACuB,OAAO,CAAC,UAAU,EAAExB,QAAQ,CAAC;MAC1CmB,QAAQ,CAACnB,QAAQ,CAAC;IAEtB,CAAC,MAAM,IAAIa,IAAI,CAACE,MAAM,KAAK,OAAO,EAAE;MAChC;MACAC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IACvB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;EACxB;AAEA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}