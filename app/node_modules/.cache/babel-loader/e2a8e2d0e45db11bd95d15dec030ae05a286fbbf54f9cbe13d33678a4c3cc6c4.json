{"ast":null,"code":"const db = 'http://127.0.0.1:8000/api/';\nexport const saveLevel = async level => {\n  const credentials = {\n    username: localStorage.getItem('username'),\n    levelAt: level\n  };\n  console.log(credentials);\n  try {\n    const response = await fetch(db + 'setlevel/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      alert('Your level has been updated.');\n    } else {\n      alert(data.message);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const login = async (credentials, username) => {\n  try {\n    const response = await fetch(db + 'login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      localStorage.setItem('username', username);\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/level/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username\n          })\n        });\n        const data = await response.json();\n        if (data.status === 'success' && data.levelAt) {\n          alert('Login successful!');\n          window.location.href = data.levelAt;\n        } else {\n          alert(\"Something ain't right.\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (data.status === 'error') {\n      // Handle error case\n      alert(data.message);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["db","saveLevel","level","credentials","username","localStorage","getItem","levelAt","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","message","error","login","setItem","window","location","href"],"sources":["/Users/markmathe/Downloads/DjangoRest-React-ThreeJs-Template-master-master-2/app/src/components/utils.js"],"sourcesContent":["\nconst db = 'http://127.0.0.1:8000/api/'\n\nexport const saveLevel = async (level) => {\n\n    const credentials = {\n        username: localStorage.getItem('username'),\n        levelAt: level,\n    };\n    console.log(credentials)\n\n    try {\n        const response = await fetch(db +'setlevel/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(credentials)\n        });\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n            alert('Your level has been updated.');\n\n        } else {\n            alert(data.message);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const login = async (credentials, username) => {\n\n    try {\n        const response = await fetch(db + 'login/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(credentials)\n        });\n\n        const data = await response.json();\n\n        if (data.status === 'success') {\n\n            localStorage.setItem('username', username);\n            try {\n                const response = await fetch('http://127.0.0.1:8000/api/level/', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ username: username })\n                });\n\n                const data = await response.json();\n\n                if (data.status === 'success' && data.levelAt ) {\n                    alert('Login successful!');\n\n                    window.location.href = data.levelAt;\n                    \n                } else {\n                    alert(\"Something ain't right.\");\n                }\n            } catch (error) {\n                console.error(error);\n            }\n            \n        } else if (data.status === 'error') {\n            // Handle error case\n            alert(data.message);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n\n    }\n\n\n"],"mappings":"AACA,MAAMA,EAAE,GAAG,4BAA4B;AAEvC,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EAEtC,MAAMC,WAAW,GAAG;IAChBC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC1CC,OAAO,EAAEL;EACb,CAAC;EACDM,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;EAExB,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACX,EAAE,GAAE,WAAW,EAAE;MAC1CY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,WAAW;IACpC,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAC3BC,KAAK,CAAC,8BAA8B,CAAC;IAEzC,CAAC,MAAM;MACHA,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IACvB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOpB,WAAW,EAAEC,QAAQ,KAAK;EAElD,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACX,EAAE,GAAG,QAAQ,EAAE;MACxCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,WAAW;IACpC,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAE3Bd,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAEpB,QAAQ,CAAC;MAC1C,IAAI;QACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEZ,QAAQ,EAAEA;UAAS,CAAC;QAC/C,CAAC,CAAC;QAEF,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,IAAIF,IAAI,CAACV,OAAO,EAAG;UAC5Ca,KAAK,CAAC,mBAAmB,CAAC;UAE1BK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGV,IAAI,CAACV,OAAO;QAEvC,CAAC,MAAM;UACHa,KAAK,CAAC,wBAAwB,CAAC;QACnC;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;MACxB;IAEJ,CAAC,MAAM,IAAIL,IAAI,CAACE,MAAM,KAAK,OAAO,EAAE;MAChC;MACAC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IACvB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;EACxB;AAEA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}