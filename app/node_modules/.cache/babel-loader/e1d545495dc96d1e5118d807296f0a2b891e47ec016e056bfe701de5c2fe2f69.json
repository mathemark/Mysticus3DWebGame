{"ast":null,"code":"import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.05;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // The four arrow keys\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  };\n\n  // Mouse buttons\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  };\n\n  // Touch fingers\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  // the target DOM element for key events\n  this._domElementKeyEvents = null;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n  this.listenToKeyEvents = function (domElement) {\n    domElement.addEventListener('keydown', onKeyDown);\n    this._domElementKeyEvents = domElement;\n  };\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function () {\n    var offset = new Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().invert();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    var twoPI = 2 * Math.PI;\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      }\n\n      // restrict theta to be between desired limits\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n      if (isFinite(min) && isFinite(max)) {\n        if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n        if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n        if (min <= max) {\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n        } else {\n          spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n        }\n      }\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n      // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n      return false;\n    };\n  }();\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu);\n    scope.domElement.removeEventListener('pointerdown', onPointerDown);\n    scope.domElement.removeEventListener('wheel', onMouseWheel);\n    scope.domElement.removeEventListener('touchstart', onTouchStart);\n    scope.domElement.removeEventListener('touchend', onTouchEnd);\n    scope.domElement.removeEventListener('touchmove', onTouchMove);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n    if (scope._domElementKeyEvents !== null) {\n      scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n    }\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n  function handleMouseUp( /*event*/\n  ) {\n\n    // no-op\n  }\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyIn(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyOut(getZoomScale());\n    }\n    scope.update();\n  }\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyOut(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n  function handleTouchEnd( /*event*/\n  ) {\n\n    // no-op\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onPointerDown(event) {\n    if (scope.enabled === false) return;\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n\n      // TODO touch\n    }\n  }\n\n  function onPointerMove(event) {\n    if (scope.enabled === false) return;\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n\n      // TODO touch\n    }\n  }\n\n  function onPointerUp(event) {\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n\n      // TODO touch\n    }\n  }\n\n  function onMouseDown(event) {\n    // Prevent the browser from scrolling.\n    event.preventDefault();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n    var mouseAction;\n    switch (event.button) {\n      case 0:\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n      case 1:\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n      case 2:\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n      default:\n        mouseAction = -1;\n    }\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n        break;\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n        break;\n      default:\n        state = STATE.NONE;\n    }\n    if (state !== STATE.NONE) {\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n  function onMouseUp(event) {\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n          default:\n            state = STATE.NONE;\n        }\n        break;\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n          default:\n            state = STATE.NONE;\n        }\n        break;\n      default:\n        state = STATE.NONE;\n    }\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n    event.stopPropagation();\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n      default:\n        state = STATE.NONE;\n    }\n  }\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  }\n\n  //\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu);\n  scope.domElement.addEventListener('pointerdown', onPointerDown);\n  scope.domElement.addEventListener('wheel', onMouseWheel);\n  scope.domElement.addEventListener('touchstart', onTouchStart);\n  scope.domElement.addEventListener('touchend', onTouchEnd);\n  scope.domElement.addEventListener('touchmove', onTouchMove);\n\n  // force an update at start\n\n  this.update();\n};\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","OrbitControls","object","domElement","undefined","console","warn","document","error","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","pointerType","onMouseDown","onMouseMove","onMouseUp","focus","window","mouseAction","button","ctrlKey","metaKey","shiftKey","stopPropagation","DOLLY_ROTATE","prototype","Object","create","constructor","MapControls","call"],"sources":["/Users/markmathe/Downloads/DjangoRest-React-ThreeJs-Template-master-master-2/app/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}